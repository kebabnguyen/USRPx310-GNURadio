options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: junk
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: fft_len
  id: variable
  parameters:
    comment: ''
    value: '64'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 160.0]
    rotation: 0
    state: enabled
- name: frame_length_tag_key
  id: variable
  parameters:
    comment: ''
    value: '"frame_len"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1664, 160.0]
    rotation: 0
    state: true
- name: header_equalizer
  id: variable
  parameters:
    comment: ''
    value: digital.ofdm_equalizer_simpledfe(fft_len, header_mod.base(), occupied_carriers,
      pilot_carriers, pilot_symbols)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1640, 240.0]
    rotation: 0
    state: enabled
- name: header_formatter_rx
  id: variable
  parameters:
    comment: ''
    value: digital.packet_header_ofdm(occupied_carriers, n_syms=1, len_tag_key=length_tag_key,
      frame_len_tag_key=frame_length_tag_key, bits_per_header_sym=header_mod.bits_per_symbol(),
      bits_per_payload_sym=payload_mod.bits_per_symbol(), scramble_header=False)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1832, 232.0]
    rotation: 0
    state: enabled
- name: header_mod
  id: variable
  parameters:
    comment: ''
    value: digital.constellation_bpsk()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 160.0]
    rotation: 0
    state: enabled
- name: length_tag_key
  id: variable
  parameters:
    comment: ''
    value: '"packet_len"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 160.0]
    rotation: 0
    state: enabled
- name: occupied_carriers
  id: variable
  parameters:
    comment: ''
    value: (list(range(-26,-21)) + list(range(-20,-9)) + list(range(11,21)) + list(range(22,28)),
      list(range(-9,-7)) + list(range(-6,0)) + list(range(1,7)) + list(range(8,10))
      + list(range(11,21)) + list(range(22,28)), list(range(-26,-21)) + list(range(-20,-9)),
      list(range(-9,-7)) + list(range(-6,0)) + list(range(1,7)) + list(range(8,10)),
      list(range(11,21)) + list(range(22,28)),)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 240.0]
    rotation: 0
    state: enabled
- name: packet_len
  id: variable
  parameters:
    comment: ''
    value: '32'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 160.0]
    rotation: 0
    state: enabled
- name: payload_equalizer
  id: variable
  parameters:
    comment: ''
    value: digital.ofdm_equalizer_simpledfe(fft_len, payload_mod.base(), occupied_carriers,
      pilot_carriers, pilot_symbols, 1)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1464, 160.0]
    rotation: 0
    state: enabled
- name: payload_mod
  id: variable
  parameters:
    comment: ''
    value: digital.constellation_qpsk()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 160.0]
    rotation: 0
    state: enabled
- name: pilot_carriers
  id: variable
  parameters:
    comment: ''
    value: ((-21, -7, 7, 21,),)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072, 240.0]
    rotation: 0
    state: enabled
- name: pilot_symbols
  id: variable
  parameters:
    comment: ''
    value: ((1, 1, 1, -1,),)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1216, 240.0]
    rotation: 0
    state: enabled
- name: rolloff
  id: variable
  parameters:
    comment: ''
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1376, 160.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '1000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 160.0]
    rotation: 0
    state: enabled
- name: sc
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '0'
    step: '1'
    stop: '2'
    value: '0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 164.0]
    rotation: 0
    state: true
- name: sync_word1
  id: variable
  parameters:
    comment: ''
    value: '[0., 0., 0., 0., 0., 0., 0., 1.41421356, 0., -1.41421356, 0., 1.41421356,
      0., -1.41421356, 0., -1.41421356, 0., -1.41421356, 0., 1.41421356, 0., -1.41421356,
      0., 1.41421356, 0., -1.41421356, 0., -1.41421356, 0., -1.41421356, 0., -1.41421356,
      0., 1.41421356, 0., -1.41421356, 0., 1.41421356, 0., 1.41421356, 0., 1.41421356,
      0., -1.41421356, 0., 1.41421356, 0., 1.41421356, 0., 1.41421356, 0., -1.41421356,
      0., 1.41421356, 0., 1.41421356, 0., 1.41421356, 0., 0., 0., 0., 0., 0.]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 240.0]
    rotation: 0
    state: enabled
- name: sync_word2
  id: variable
  parameters:
    comment: ''
    value: '[0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, 1, 1,
      1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 0, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1,
      1, 1, 1, 1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 0, 0, 0, 0, 0] '
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 240.0]
    rotation: 0
    state: enabled
- name: thold
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Threshold
    min_len: '1000'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '0'
    step: '1'
    stop: '800'
    value: '380'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 372.0]
    rotation: 0
    state: true
- name: analog_frequency_modulator_fc_0
  id: analog_frequency_modulator_fc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    sensitivity: -2.0/fft_len
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1552, 1336.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: fft_len+fft_len//4
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072, 1440.0]
    rotation: 0
    state: enabled
- name: blocks_file_sink_0_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: /nfs/users/j149q328/Documents/ass.txt
    type: byte
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1544, 2140.0]
    rotation: 0
    state: true
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1640, 2264.0]
    rotation: 0
    state: disabled
- name: blocks_message_debug_0_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1984, 1064.0]
    rotation: 0
    state: enabled
- name: blocks_message_strobe_0
  id: blocks_message_strobe
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    msg: pmt.intern("beep")
    period: '1000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1888, 844.0]
    rotation: 0
    state: true
- name: blocks_moving_average_xx_1_0
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: '500'
    max_iter: '1000'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '0.02'
    type: float
    vlen: fft_len
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 684.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_xx_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1848, 1320.0]
    rotation: 0
    state: enabled
- name: blocks_repack_bits_bb_0_0
  id: blocks_repack_bits_bb
  parameters:
    affinity: ''
    alias: ''
    align_output: 'True'
    comment: ''
    endianness: gr.GR_LSB_FIRST
    k: payload_mod.bits_per_symbol()
    l: '8'
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1168, 2148.0]
    rotation: 0
    state: enabled
- name: digital_constellation_decoder_cb_0
  id: digital_constellation_decoder_cb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: header_mod.base()
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1896, 1544.0]
    rotation: 180
    state: enabled
- name: digital_constellation_decoder_cb_1
  id: digital_constellation_decoder_cb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: payload_mod.base()
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 2164.0]
    rotation: 0
    state: enabled
- name: digital_header_payload_demux_0
  id: digital_header_payload_demux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    guard_interval: fft_len//4
    header_len: '3'
    header_padding: '0'
    items_per_symbol: fft_len
    length_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    output_symbols: 'True'
    samp_rate: samp_rate
    special_tags: ()
    timing_tag_key: '"rx_time"'
    trigger_tag_key: '""'
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2088, 1328.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_chanest_vcvc_0
  id: digital_ofdm_chanest_vcvc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    eq_noise_red_len: '0'
    force_one_symbol: 'False'
    max_carr_offset: '3'
    maxoutbuf: '0'
    minoutbuf: '0'
    n_data_symbols: '1'
    sync_symbol1: sync_word1
    sync_symbol2: sync_word2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [872, 1600.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_frame_equalizer_vcvc_0
  id: digital_ofdm_frame_equalizer_vcvc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    cp_len: fft_len//4
    equalizer: header_equalizer.base()
    fft_len: fft_len
    fixed_frame_len: '1'
    len_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_channel_state: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1288, 1584.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_frame_equalizer_vcvc_1
  id: digital_ofdm_frame_equalizer_vcvc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    cp_len: fft_len//4
    equalizer: payload_equalizer.base()
    fft_len: fft_len
    fixed_frame_len: '0'
    len_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_channel_state: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 1768.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_serializer_vcc_header
  id: digital_ofdm_serializer_vcc
  parameters:
    affinity: ''
    alias: ''
    carr_offset_key: ''
    comment: ''
    fft_len: fft_len
    input_is_shifted: 'True'
    len_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    packet_len_tag_key: ''
    symbols_skipped: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1904, 1616.0]
    rotation: 0
    state: disabled
- name: digital_ofdm_serializer_vcc_payload
  id: digital_ofdm_serializer_vcc
  parameters:
    affinity: ''
    alias: ''
    carr_offset_key: ''
    comment: ''
    fft_len: fft_len
    input_is_shifted: 'True'
    len_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    packet_len_tag_key: length_tag_key
    symbols_skipped: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 1892.0]
    rotation: 180
    state: disabled
- name: digital_ofdm_sync_sc_cfb_0
  id: digital_ofdm_sync_sc_cfb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    cp_len: fft_len//4
    fft_len: fft_len
    maxoutbuf: '0'
    minoutbuf: '0'
    threshold: '0.9'
    use_even_carriers: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1136, 1328.0]
    rotation: 0
    state: enabled
- name: digital_packet_headerparser_b_0
  id: digital_packet_headerparser_b
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    header_formatter: header_formatter_rx
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1624, 1544.0]
    rotation: 180
    state: enabled
- name: epy_block_0_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nclass\
      \ blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block\n\
      \n    def __init__(self, key = \"sc_tag_key\", packet_key = \"packet_len\",\
      \ vlen = 64):  # only default arguments here\n        gr.sync_block.__init__(\n\
      \            self,\n            name='OFDMA Controller: vector',   # will show\
      \ up in GRC\n            in_sig=[(np.complex64,vlen)],\n            out_sig=[(np.complex64,vlen)]\n\
      \        )\n\n        self.key = key;\n        #self.pattern = pattern;\n  \
      \      self.packet_key = packet_key;\n        \n        self.selectPortName\
      \ = 'msg2'\n        self.message_port_register_in(pmt.intern(self.selectPortName))\n\
      \        self.set_msg_handler(pmt.intern(self.selectPortName), self.handle_msg)\n\
      \        self.pattern = 1\n        \n    def handle_msg(self, msg):\n    \t\
      self.pattern = pmt.to_python(msg)\n    \t\n    def work(self, input_items, output_items):\n\
      \        pkey = pmt.intern(self.key)\n        ppattern = pmt.to_pmt(self.pattern)\n\
      \        ppacket = pmt.to_pmt(self.packet_key)\n        for i, sample in enumerate(input_items[0]):\n\
      \            t = self.nitems_written(0) + i\n            #this seems like a\
      \ \"hacky\" way of doing this, but it works and I can't find any other way\n\
      \            tags = self.get_tags_in_range(0, t, t+1,ppacket)\n            if\
      \ (len(tags) != 0):\n                self.add_item_tag(0, self.nitems_written(0)+i,\
      \ pkey, ppattern)\n        output_items[0][:] = input_items[0]\n        return\
      \ len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    key: '''sc_tag_key'''
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_key: length_tag_key
    vlen: fft_len
  states:
    _io_cache: '(''OFDMA Controller: vector'', ''blk'', [(''key'', "''sc_tag_key''"),
      (''packet_key'', "''packet_len''"), (''vlen'', ''64'')], [(''0'', ''complex'',
      64), (''msg2'', ''message'', 1)], [(''0'', ''complex'', 64)], '''', [''key'',
      ''packet_key''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 2028.0]
    rotation: 180
    state: enabled
- name: epy_block_0_0_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nclass\
      \ blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block\n\
      \n    def __init__(self, key = \"sc_tag_key\", packet_key = \"packet_len\",\
      \ vlen = 64):  # only default arguments here\n        gr.sync_block.__init__(\n\
      \            self,\n            name='OFDMA Controller: vector',   # will show\
      \ up in GRC\n            in_sig=[(np.complex64,vlen)],\n            out_sig=[(np.complex64,vlen)]\n\
      \        )\n\n        self.key = key;\n        #self.pattern = pattern;\n  \
      \      self.packet_key = packet_key;\n        \n        self.selectPortName\
      \ = 'msg2'\n        self.message_port_register_in(pmt.intern(self.selectPortName))\n\
      \        self.set_msg_handler(pmt.intern(self.selectPortName), self.handle_msg)\n\
      \        self.pattern = 1\n        \n    def handle_msg(self, msg):\n    \t\
      self.pattern = pmt.to_python(msg)\n    \t\n    def work(self, input_items, output_items):\n\
      \        pkey = pmt.intern(self.key)\n        ppattern = pmt.to_pmt(self.pattern)\n\
      \        ppacket = pmt.to_pmt(self.packet_key)\n        for i, sample in enumerate(input_items[0]):\n\
      \            t = self.nitems_written(0) + i\n            #this seems like a\
      \ \"hacky\" way of doing this, but it works and I can't find any other way\n\
      \            tags = self.get_tags_in_range(0, t, t+1,ppacket)\n            if\
      \ (len(tags) != 0):\n                self.add_item_tag(0, self.nitems_written(0)+i,\
      \ pkey, ppattern)\n        output_items[0][:] = input_items[0]\n        return\
      \ len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    key: '''sc_tag_key'''
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_key: length_tag_key
    vlen: fft_len
  states:
    _io_cache: '(''OFDMA Controller: vector'', ''blk'', [(''key'', "''sc_tag_key''"),
      (''packet_key'', "''packet_len''"), (''vlen'', ''64'')], [(''0'', ''complex'',
      64), (''msg2'', ''message'', 1)], [(''0'', ''complex'', 64)], '''', [''key'',
      ''packet_key''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1560, 1780.0]
    rotation: 0
    state: enabled
- name: epy_block_0_0_1
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nimport pmt\nfrom gnuradio import gr\n\n\nclass\
      \ blk(gr.sync_block):\n\n    def __init__(self, vlen = 64, thold = 500):  #\
      \ only default arguments here\n        gr.sync_block.__init__(\n           \
      \ self,\n            name='Power Decision Block 3',\n            in_sig=[(np.float32,vlen)],\n\
      \            out_sig=[(np.float32,vlen)]\n        )\n        self.vlen = vlen\n\
      \        self.thold = thold\n        self.message_port_register_out(pmt.intern(\"\
      pattern_out\"))\n\n    def work(self, input_items, output_items):\n        inp\
      \ = np.array(input_items)\n        inp = inp[0,:]\n        sc_lut = np.array([[-26,\
      \ -25, -24, -23, -22, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10],\
      \ [-9, -8, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 8, 9], [11, 12, 13, 14,\
      \ 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27]]) #-32 to +31\n        #this\
      \ is a test program where the subcarrier patterns and dimensions will be hard-coded\n\
      \        i = -1\n        run = True\n        while (run and i < 2):\n      \
      \  \ti = i+1\n        \trun = False\n        \tfor j in range(0, 15):\n    \
      \    \t\tif inp[0][(sc_lut[i][j])+32] < self.thold: #the difference here (vs\
      \ power decision block 2) is we WANT to match the pattern\n        \t\t\trun\
      \ = True\n        # we found a successful pattern if run is false, otherwise\
      \ none of the patterns worked and output a -1 (sus condition)\n        if run:\n\
      \        \ti = -1\n        self.message_port_pub(pmt.intern(\"pattern_out\"\
      ), pmt.to_pmt(i))\n        output_items[0][:] = input_items[0]\n        return\
      \ len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    thold: thold
    vlen: fft_len
  states:
    _io_cache: ('Power Decision Block 3', 'blk', [('vlen', '64'), ('thold', '500')],
      [('0', 'float', 64)], [('0', 'float', 64), ('pattern_out', 'message', 1)], '',
      ['thold', 'vlen'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1288, 848.0]
    rotation: 0
    state: enabled
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nclass\
      \ blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block\n\
      \n    def __init__(self, packet_key = \"packet_len\"):  # only default arguments\
      \ here\n        gr.sync_block.__init__(\n            self,\n            name='Pattern\
      \ Retriever',   # will show up in GRC\n            in_sig=[np.int8],\n     \
      \       out_sig=[np.int8]\n        )\n        self.message_port_register_out(pmt.intern('msg_out'))\n\
      \        self.packet_key = packet_key;\n\n    def work(self, input_items, output_items):\n\
      \    \tcounter = 0\n    \tppacket = pmt.to_pmt(self.packet_key)\n    \tfor i,\
      \ sample in enumerate(input_items[0]):\n    \t\tt = self.nitems_written(0) +\
      \ i\n    \t\ttags = self.get_tags_in_range(0,t,t+1,ppacket)\n    \t\t#output_items[0][i]\
      \ = input_items[0][i]\n    \t\t#if (len(tags) != 0): # if there is a packet\
      \ length tag\n    \t\tif i % 31 == 0:\n    \t\t\toutput_items[0][i] = input_items[0][i]\n\
      \    \t\t\tself.message_port_pub(pmt.intern('msg_out'), pmt.intern(str(input_items[0][i])))\n\
      \    \t\telse:\n    \t\t\toutput_items[0][i] = input_items[0][i]\n    \treturn\
      \ len(output_items[0])\n\n\t\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_key: '''packet_len'''
  states:
    _io_cache: ('Pattern Retriever', 'blk', [('packet_key', "'packet_len'")], [('0',
      'byte', 1)], [('0', 'byte', 1), ('msg_out', 'message', 1)], '', ['packet_key'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1376, 2228.0]
    rotation: 0
    state: disabled
- name: fft_vxx_0_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fft_len
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: ()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 1600.0]
    rotation: 0
    state: enabled
- name: fft_vxx_1
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fft_len
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: ()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 1768.0]
    rotation: 0
    state: enabled
- name: import_1
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: from gnuradio.digital.utils import tagged_streams
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1840, 176.0]
    rotation: 0
    state: enabled
- name: logpwrfft_x_0
  id: logpwrfft_x
  parameters:
    affinity: ''
    alias: ''
    average: 'True'
    avg_alpha: '1'
    comment: ''
    fft_size: fft_len
    frame_rate: '1000'
    maxoutbuf: '0'
    minoutbuf: '0'
    ref_scale: '0.00001'
    sample_rate: samp_rate
    shift: 'True'
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [528, 708.0]
    rotation: 0
    state: enabled
- name: qtgui_vector_sink_f_0_0
  id: qtgui_vector_sink_f
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    average: '1.0'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    ref_level: '0'
    showports: 'False'
    update_time: '0.10'
    vlen: fft_len
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    x_axis_label: '"x-Axis"'
    x_start: '0'
    x_step: '1.0'
    x_units: '""'
    y_axis_label: '"y-Axis"'
    y_units: '""'
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1928, 556.0]
    rotation: 0
    state: true
- name: sonny_ofdma_ofdma_rx_0
  id: sonny_ofdma_ofdma_rx
  parameters:
    affinity: ''
    alias: ''
    carr_offset_key: '""'
    comment: ''
    fft_len: fft_len
    input_is_shifted: 'True'
    len_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    packet_len_tag_key: length_tag_key
    sc_tag_key: '"sc_tag_key"'
    symbols_skipped: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 2028.0]
    rotation: 180
    state: true
- name: sonny_ofdma_ofdma_rx_0_0
  id: sonny_ofdma_ofdma_rx
  parameters:
    affinity: ''
    alias: ''
    carr_offset_key: '""'
    comment: ''
    fft_len: fft_len
    input_is_shifted: 'True'
    len_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    packet_len_tag_key: '""'
    sc_tag_key: '"sc_tag_key"'
    symbols_skipped: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1856, 1764.0]
    rotation: 0
    state: true
- name: uhd_usrp_source_0
  id: uhd_usrp_source
  parameters:
    affinity: ''
    alias: ''
    ant0: '"RX2"'
    ant1: '"RX2"'
    ant10: '"RX2"'
    ant11: '"RX2"'
    ant12: '"RX2"'
    ant13: '"RX2"'
    ant14: '"RX2"'
    ant15: '"RX2"'
    ant16: '"RX2"'
    ant17: '"RX2"'
    ant18: '"RX2"'
    ant19: '"RX2"'
    ant2: '"RX2"'
    ant20: '"RX2"'
    ant21: '"RX2"'
    ant22: '"RX2"'
    ant23: '"RX2"'
    ant24: '"RX2"'
    ant25: '"RX2"'
    ant26: '"RX2"'
    ant27: '"RX2"'
    ant28: '"RX2"'
    ant29: '"RX2"'
    ant3: '"RX2"'
    ant30: '"RX2"'
    ant31: '"RX2"'
    ant4: '"RX2"'
    ant5: '"RX2"'
    ant6: '"RX2"'
    ant7: '"RX2"'
    ant8: '"RX2"'
    ant9: '"RX2"'
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: '0'
    center_freq1: '0'
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: '0'
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: '0'
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: 0e0
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dc_offs0: 0+0j
    dc_offs1: 0+0j
    dc_offs10: 0+0j
    dc_offs11: 0+0j
    dc_offs12: 0+0j
    dc_offs13: 0+0j
    dc_offs14: 0+0j
    dc_offs15: 0+0j
    dc_offs16: 0+0j
    dc_offs17: 0+0j
    dc_offs18: 0+0j
    dc_offs19: 0+0j
    dc_offs2: 0+0j
    dc_offs20: 0+0j
    dc_offs21: 0+0j
    dc_offs22: 0+0j
    dc_offs23: 0+0j
    dc_offs24: 0+0j
    dc_offs25: 0+0j
    dc_offs26: 0+0j
    dc_offs27: 0+0j
    dc_offs28: 0+0j
    dc_offs29: 0+0j
    dc_offs3: 0+0j
    dc_offs30: 0+0j
    dc_offs31: 0+0j
    dc_offs4: 0+0j
    dc_offs5: 0+0j
    dc_offs6: 0+0j
    dc_offs7: 0+0j
    dc_offs8: 0+0j
    dc_offs9: 0+0j
    dc_offs_enb0: default
    dc_offs_enb1: default
    dc_offs_enb10: default
    dc_offs_enb11: default
    dc_offs_enb12: default
    dc_offs_enb13: default
    dc_offs_enb14: default
    dc_offs_enb15: default
    dc_offs_enb16: default
    dc_offs_enb17: default
    dc_offs_enb18: default
    dc_offs_enb19: default
    dc_offs_enb2: default
    dc_offs_enb20: default
    dc_offs_enb21: default
    dc_offs_enb22: default
    dc_offs_enb23: default
    dc_offs_enb24: default
    dc_offs_enb25: default
    dc_offs_enb26: default
    dc_offs_enb27: default
    dc_offs_enb28: default
    dc_offs_enb29: default
    dc_offs_enb3: default
    dc_offs_enb30: default
    dc_offs_enb31: default
    dc_offs_enb4: default
    dc_offs_enb5: default
    dc_offs_enb6: default
    dc_offs_enb7: default
    dc_offs_enb8: default
    dc_offs_enb9: default
    dev_addr: '""'
    dev_args: ''
    gain0: '0'
    gain1: '0'
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: '0'
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: '0'
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    gain_type0: default
    gain_type1: default
    gain_type10: default
    gain_type11: default
    gain_type12: default
    gain_type13: default
    gain_type14: default
    gain_type15: default
    gain_type16: default
    gain_type17: default
    gain_type18: default
    gain_type19: default
    gain_type2: default
    gain_type20: default
    gain_type21: default
    gain_type22: default
    gain_type23: default
    gain_type24: default
    gain_type25: default
    gain_type26: default
    gain_type27: default
    gain_type28: default
    gain_type29: default
    gain_type3: default
    gain_type30: default
    gain_type31: default
    gain_type4: default
    gain_type5: default
    gain_type6: default
    gain_type7: default
    gain_type8: default
    gain_type9: default
    iq_imbal0: 0+0j
    iq_imbal1: 0+0j
    iq_imbal10: 0+0j
    iq_imbal11: 0+0j
    iq_imbal12: 0+0j
    iq_imbal13: 0+0j
    iq_imbal14: 0+0j
    iq_imbal15: 0+0j
    iq_imbal16: 0+0j
    iq_imbal17: 0+0j
    iq_imbal18: 0+0j
    iq_imbal19: 0+0j
    iq_imbal2: 0+0j
    iq_imbal20: 0+0j
    iq_imbal21: 0+0j
    iq_imbal22: 0+0j
    iq_imbal23: 0+0j
    iq_imbal24: 0+0j
    iq_imbal25: 0+0j
    iq_imbal26: 0+0j
    iq_imbal27: 0+0j
    iq_imbal28: 0+0j
    iq_imbal29: 0+0j
    iq_imbal3: 0+0j
    iq_imbal30: 0+0j
    iq_imbal31: 0+0j
    iq_imbal4: 0+0j
    iq_imbal5: 0+0j
    iq_imbal6: 0+0j
    iq_imbal7: 0+0j
    iq_imbal8: 0+0j
    iq_imbal9: 0+0j
    iq_imbal_enb0: default
    iq_imbal_enb1: default
    iq_imbal_enb10: default
    iq_imbal_enb11: default
    iq_imbal_enb12: default
    iq_imbal_enb13: default
    iq_imbal_enb14: default
    iq_imbal_enb15: default
    iq_imbal_enb16: default
    iq_imbal_enb17: default
    iq_imbal_enb18: default
    iq_imbal_enb19: default
    iq_imbal_enb2: default
    iq_imbal_enb20: default
    iq_imbal_enb21: default
    iq_imbal_enb22: default
    iq_imbal_enb23: default
    iq_imbal_enb24: default
    iq_imbal_enb25: default
    iq_imbal_enb26: default
    iq_imbal_enb27: default
    iq_imbal_enb28: default
    iq_imbal_enb29: default
    iq_imbal_enb3: default
    iq_imbal_enb30: default
    iq_imbal_enb31: default
    iq_imbal_enb4: default
    iq_imbal_enb5: default
    iq_imbal_enb6: default
    iq_imbal_enb7: default
    iq_imbal_enb8: default
    iq_imbal_enb9: default
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    otw: ''
    rx_agc0: Default
    rx_agc1: Default
    rx_agc10: Default
    rx_agc11: Default
    rx_agc12: Default
    rx_agc13: Default
    rx_agc14: Default
    rx_agc15: Default
    rx_agc16: Default
    rx_agc17: Default
    rx_agc18: Default
    rx_agc19: Default
    rx_agc2: Default
    rx_agc20: Default
    rx_agc21: Default
    rx_agc22: Default
    rx_agc23: Default
    rx_agc24: Default
    rx_agc25: Default
    rx_agc26: Default
    rx_agc27: Default
    rx_agc28: Default
    rx_agc29: Default
    rx_agc3: Default
    rx_agc30: Default
    rx_agc31: Default
    rx_agc4: Default
    rx_agc5: Default
    rx_agc6: Default
    rx_agc7: Default
    rx_agc8: Default
    rx_agc9: Default
    samp_rate: samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    start_time: '-1.0'
    stream_args: ''
    stream_chans: '[]'
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 980.0]
    rotation: 0
    state: true
- name: virtual_sink_0_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Header Stream
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2600, 1384.0]
    rotation: 0
    state: enabled
- name: virtual_sink_1_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Payload Stream
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2592, 1464.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Header Stream
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 1632.0]
    rotation: 0
    state: enabled
- name: virtual_source_1_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Payload Stream
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 1808.0]
    rotation: 0
    state: enabled

connections:
- [analog_frequency_modulator_fc_0, '0', blocks_multiply_xx_0, '0']
- [blocks_delay_0, '0', blocks_multiply_xx_0, '1']
- [blocks_message_strobe_0, strobe, blocks_message_debug_0_0, print]
- [blocks_moving_average_xx_1_0, '0', epy_block_0_0_1, '0']
- [blocks_multiply_xx_0, '0', digital_header_payload_demux_0, '0']
- [blocks_repack_bits_bb_0_0, '0', blocks_file_sink_0_0, '0']
- [blocks_repack_bits_bb_0_0, '0', epy_block_1, '0']
- [digital_constellation_decoder_cb_0, '0', digital_packet_headerparser_b_0, '0']
- [digital_constellation_decoder_cb_1, '0', blocks_repack_bits_bb_0_0, '0']
- [digital_header_payload_demux_0, '0', virtual_sink_0_1, '0']
- [digital_header_payload_demux_0, '1', virtual_sink_1_0, '0']
- [digital_ofdm_chanest_vcvc_0, '0', digital_ofdm_frame_equalizer_vcvc_0, '0']
- [digital_ofdm_frame_equalizer_vcvc_0, '0', digital_ofdm_serializer_vcc_header, '0']
- [digital_ofdm_frame_equalizer_vcvc_0, '0', epy_block_0_0_0, '0']
- [digital_ofdm_frame_equalizer_vcvc_1, '0', digital_ofdm_serializer_vcc_payload,
  '0']
- [digital_ofdm_frame_equalizer_vcvc_1, '0', epy_block_0_0, '0']
- [digital_ofdm_serializer_vcc_header, '0', digital_constellation_decoder_cb_0, '0']
- [digital_ofdm_serializer_vcc_payload, '0', digital_constellation_decoder_cb_1, '0']
- [digital_ofdm_sync_sc_cfb_0, '0', analog_frequency_modulator_fc_0, '0']
- [digital_ofdm_sync_sc_cfb_0, '1', digital_header_payload_demux_0, '1']
- [digital_packet_headerparser_b_0, header_data, digital_header_payload_demux_0, header_data]
- [epy_block_0_0, '0', sonny_ofdma_ofdma_rx_0, '0']
- [epy_block_0_0_0, '0', sonny_ofdma_ofdma_rx_0_0, '0']
- [epy_block_0_0_1, '0', qtgui_vector_sink_f_0_0, '0']
- [epy_block_0_0_1, pattern_out, blocks_message_strobe_0, set_msg]
- [epy_block_0_0_1, pattern_out, epy_block_0_0, msg2]
- [epy_block_0_0_1, pattern_out, epy_block_0_0_0, msg2]
- [epy_block_1, '0', blocks_file_sink_0_0, '0']
- [epy_block_1, msg_out, blocks_message_debug_0, print]
- [fft_vxx_0_0, '0', digital_ofdm_chanest_vcvc_0, '0']
- [fft_vxx_1, '0', digital_ofdm_frame_equalizer_vcvc_1, '0']
- [logpwrfft_x_0, '0', blocks_moving_average_xx_1_0, '0']
- [sonny_ofdma_ofdma_rx_0, '0', digital_constellation_decoder_cb_1, '0']
- [sonny_ofdma_ofdma_rx_0_0, '0', digital_constellation_decoder_cb_0, '0']
- [uhd_usrp_source_0, '0', blocks_delay_0, '0']
- [uhd_usrp_source_0, '0', digital_ofdm_sync_sc_cfb_0, '0']
- [uhd_usrp_source_0, '0', logpwrfft_x_0, '0']
- [virtual_source_0_1, '0', fft_vxx_0_0, '0']
- [virtual_source_1_0, '0', fft_vxx_1, '0']

metadata:
  file_format: 1
