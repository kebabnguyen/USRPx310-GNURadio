options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: msgtest
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: fft_len
  id: variable
  parameters:
    comment: ''
    value: '64'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 160.0]
    rotation: 0
    state: enabled
- name: frame_length_tag_key
  id: variable
  parameters:
    comment: ''
    value: '"frame_len"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1664, 160.0]
    rotation: 0
    state: true
- name: header_equalizer
  id: variable
  parameters:
    comment: ''
    value: digital.ofdm_equalizer_simpledfe(fft_len, header_mod.base(), occupied_carriers,
      pilot_carriers, pilot_symbols)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1640, 240.0]
    rotation: 0
    state: enabled
- name: header_formatter_rx
  id: variable
  parameters:
    comment: ''
    value: digital.packet_header_ofdm(occupied_carriers, n_syms=1, len_tag_key=length_tag_key,
      frame_len_tag_key=frame_length_tag_key, bits_per_header_sym=header_mod.bits_per_symbol(),
      bits_per_payload_sym=payload_mod.bits_per_symbol(), scramble_header=False)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1832, 232.0]
    rotation: 0
    state: enabled
- name: header_mod
  id: variable
  parameters:
    comment: ''
    value: digital.constellation_bpsk()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 160.0]
    rotation: 0
    state: enabled
- name: length_tag_key
  id: variable
  parameters:
    comment: ''
    value: '"packet_len"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 160.0]
    rotation: 0
    state: enabled
- name: occupied_carriers
  id: variable
  parameters:
    comment: ''
    value: (list(range(11,21)) + list(range(22,28)), list(range(-9,-7)) + list(range(-6,0))
      + list(range(1,7)) + list(range(8,10)), list(range(-26,-21)) + list(range(-20,-9)),)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 240.0]
    rotation: 0
    state: enabled
- name: packet_len
  id: variable
  parameters:
    comment: ''
    value: '32'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 160.0]
    rotation: 0
    state: enabled
- name: payload_equalizer
  id: variable
  parameters:
    comment: ''
    value: digital.ofdm_equalizer_simpledfe(fft_len, payload_mod.base(), occupied_carriers,
      pilot_carriers, pilot_symbols, 1)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1464, 160.0]
    rotation: 0
    state: enabled
- name: payload_mod
  id: variable
  parameters:
    comment: ''
    value: digital.constellation_qpsk()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 160.0]
    rotation: 0
    state: enabled
- name: pilot_carriers
  id: variable
  parameters:
    comment: ''
    value: ((-21, -7, 7, 21,),)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072, 240.0]
    rotation: 0
    state: enabled
- name: pilot_symbols
  id: variable
  parameters:
    comment: ''
    value: ((1, 1, 1, -1,),)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1216, 240.0]
    rotation: 0
    state: enabled
- name: rolloff
  id: variable
  parameters:
    comment: ''
    value: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1376, 160.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '1000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 160.0]
    rotation: 0
    state: enabled
- name: sync_word1
  id: variable
  parameters:
    comment: ''
    value: '[0., 0., 0., 0., 0., 0., 0., 1.41421356, 0., -1.41421356, 0., 1.41421356,
      0., -1.41421356, 0., -1.41421356, 0., -1.41421356, 0., 1.41421356, 0., -1.41421356,
      0., 1.41421356, 0., -1.41421356, 0., -1.41421356, 0., -1.41421356, 0., -1.41421356,
      0., 1.41421356, 0., -1.41421356, 0., 1.41421356, 0., 1.41421356, 0., 1.41421356,
      0., -1.41421356, 0., 1.41421356, 0., 1.41421356, 0., 1.41421356, 0., -1.41421356,
      0., 1.41421356, 0., 1.41421356, 0., 1.41421356, 0., 0., 0., 0., 0., 0.]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 240.0]
    rotation: 0
    state: enabled
- name: sync_word2
  id: variable
  parameters:
    comment: ''
    value: '[0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, 1, 1,
      1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 0, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1,
      1, 1, 1, 1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 0, 0, 0, 0, 0] '
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 240.0]
    rotation: 0
    state: enabled
- name: thold
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Threshold
    min_len: '1000'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '0'
    step: '1'
    stop: '1000'
    value: '500'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2064, 132.0]
    rotation: 0
    state: true
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: fft_len
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1520, 1196.0]
    rotation: 0
    state: true
- name: blocks_file_source_0
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: ''
    file: ./e.bin
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'True'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 304.0]
    rotation: 0
    state: true
- name: blocks_moving_average_xx_1
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: '10'
    max_iter: '10'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '0.3'
    type: float
    vlen: fft_len
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1608, 884.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '0.05'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [792, 1196.0]
    rotation: 0
    state: true
- name: blocks_null_sink_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 1008.0]
    rotation: 0
    state: true
- name: blocks_null_sink_1
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 1160.0]
    rotation: 0
    state: true
- name: blocks_null_source_0
  id: blocks_null_source
  parameters:
    affinity: ''
    alias: ''
    bus_structure_source: '[[0,],]'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_outputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 1024.0]
    rotation: 0
    state: true
- name: blocks_null_source_1
  id: blocks_null_source
  parameters:
    affinity: ''
    alias: ''
    bus_structure_source: '[[0,],]'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_outputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 1256.0]
    rotation: 0
    state: true
- name: blocks_repack_bits_bb_0
  id: blocks_repack_bits_bb
  parameters:
    affinity: ''
    alias: ''
    align_output: 'False'
    comment: ''
    endianness: gr.GR_LSB_FIRST
    k: '8'
    l: payload_mod.bits_per_symbol()
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1152, 408.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_tagged_stream_0
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: packet_len
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 336.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_vector_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: fft_len
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1024, 1168.0]
    rotation: 0
    state: true
- name: blocks_tag_gate_0
  id: blocks_tag_gate
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_tags: 'False'
    single_key: '""'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [528, 1048.0]
    rotation: 0
    state: enabled
- name: blocks_tagged_stream_mux_0
  id: blocks_tagged_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengthtagname: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    ninputs: '2'
    tag_preserve_head_pos: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1048, 504.0]
    rotation: 0
    state: enabled
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 1224.0]
    rotation: 0
    state: true
- name: digital_chunks_to_symbols_xx_0
  id: digital_chunks_to_symbols_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    dimension: '1'
    in_type: byte
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    out_type: complex
    symbol_table: header_mod.points()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 440.0]
    rotation: 0
    state: enabled
- name: digital_chunks_to_symbols_xx_0_0
  id: digital_chunks_to_symbols_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    dimension: '1'
    in_type: byte
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    out_type: complex
    symbol_table: payload_mod.points()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [608, 544.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_carrier_allocator_cvc_0
  id: digital_ofdm_carrier_allocator_cvc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_len: fft_len
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    output_is_shifted: 'True'
    pilot_carriers: pilot_carriers
    pilot_symbols: pilot_symbols
    sync_words: (sync_word1, sync_word2)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 624.0]
    rotation: 0
    state: disabled
- name: digital_ofdm_cyclic_prefixer_0
  id: digital_ofdm_cyclic_prefixer
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    cp_len: fft_len//4
    input_size: fft_len
    maxoutbuf: '0'
    minoutbuf: '0'
    rolloff: rolloff
    tagname: length_tag_key
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [992, 932.0]
    rotation: 180
    state: enabled
- name: digital_packet_headergenerator_bb_0
  id: digital_packet_headergenerator_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    header_formatter: header_formatter_rx.base()
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1152, 328.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nclass\
      \ blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block\n\
      \n    def __init__(self, key = \"sc_tag_key\", packet_key = \"packet_len\"):\
      \  # only default arguments here\n        gr.sync_block.__init__(\n        \
      \    self,\n            name='OFDMA Controller Block',   # will show up in GRC\n\
      \            in_sig=[np.complex64],\n            out_sig=[np.complex64]\n  \
      \      )\n\n        self.key = key\n        self.packet_key = packet_key\n \
      \       self.message_port_register_in(pmt.intern('msgin'))\n        self.set_msg_handler(pmt.intern('msgin'),\
      \ self.handle_msg)\n        self.pattern = 2\n        \n    def handle_msg(self,\
      \ msg):\n        self.pattern = pmt.to_python(msg)\n\n    def work(self, input_items,\
      \ output_items):\n        pkey = pmt.intern(self.key)\n        ppattern = pmt.to_pmt(self.pattern)\n\
      \        ppacket = pmt.to_pmt(self.packet_key)\n        for i, sample in enumerate(input_items[0]):\n\
      \            t = self.nitems_written(0) + i\n            #this seems like a\
      \ \"hacky\" way of doing this, but it works and I can't find any other way\n\
      \            tags = self.get_tags_in_range(0, t, t+1,ppacket)\n            if\
      \ (len(tags) != 0):\n                self.add_item_tag(0, self.nitems_written(0)+i,\
      \ pkey, ppattern)\n        output_items[0][:] = input_items[0]\n        return\
      \ len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    key: '''sc_tag_key'''
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_key: '''packet_len'''
  states:
    _io_cache: ('OFDMA Controller Block', 'blk', [('key', "'sc_tag_key'"), ('packet_key',
      "'packet_len'")], [('0', 'complex', 1), ('msgin', 'message', 1)], [('0', 'complex',
      1)], '', ['key', 'packet_key'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 828.0]
    rotation: 0
    state: enabled
- name: epy_block_0_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n\n    def __init__(self, vlen\
      \ = 64, thold = 500):  # only default arguments here\n        gr.sync_block.__init__(\n\
      \            self,\n            name='Power Decision Block',   # will show up\
      \ in GRC\n            in_sig=[(np.float32,vlen)],\n            out_sig=[(np.float32,vlen)]\n\
      \        )\n        self.vlen = vlen\n        self.thold = thold\n        #\
      \ if an attribute with the same name as a parameter is found,\n        # a callback\
      \ is registered (properties work, too).\n\n    def work(self, input_items, output_items):\n\
      \        #output_items[0][:] = input_items[0][:]\n        #fuck you Python\n\
      \        inp = np.array(input_items)\n        inp = inp[0,:]\n        oup =\
      \ inp\n        for i in range(self.vlen):\n            if inp[0][i] > self.thold:\n\
      \                oup[0][i] = 1000\n            else:\n                oup[0][i]\
      \ = 0\n        output_items[0][:] = oup[0][:]\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    thold: thold
    vlen: fft_len
  states:
    _io_cache: ('Power Decision Block', 'blk', [('vlen', '64'), ('thold', '500')],
      [('0', 'float', 64)], [('0', 'float', 64)], '', ['thold', 'vlen'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1720, 1108.0]
    rotation: 0
    state: true
- name: epy_block_0_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport matlab.engine\nimport pmt\nimport os\nimport\
      \ time\n\neng = matlab.engine.start_matlab()\nclass blk(gr.sync_block):  # other\
      \ base classes are basic_block, decim_block, interp_block\n    \"\"\"Runs matlab\
      \ executive function every time it registers that [filename] has been modified\
      \ and spits its output out as a message\\nOne caveat is that [filename] needs\
      \ to already exist in the present directory, otherwise there'll be an error\
      \ thrown saying that the file doesn't exist.\"\"\"\n\n    def __init__(self,\
      \ filename = 'noise1kcos.txt'):  # only default arguments here\n        \"\"\
      \"arguments to this function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='Call MATLAB executive(filename)',   #\
      \ will show up in GRC\n            in_sig=[np.complex64],\n            out_sig=[np.complex64]\n\
      \            \n    \n        )\n        self.filename = filename\n        self.time1\
      \ = os.path.getmtime(self.filename)\n        self.message_port_register_out(pmt.intern('chosen\
      \ pattern'))\n        # if an attribute with the same name as a parameter is\
      \ found,\n        # a callback is registered (properties work, too).\n     \
      \   \n\n    def work(self, input_items, output_items):\n        self.time2 =\
      \ os.path.getmtime(self.filename)\n        if(self.time2 != self.time1):\n \
      \           time.sleep(1)\n            self.time1 = self.time2\n           \
      \ print('aya, something changed!') #i think the reason why this goes through\
      \ twice is because its catching on to when the file's still being written, although\
      \ im not sure if dealing with that is even necessary\n            whee = pmt.to_pmt(int(eng.executive(self.filename)))\n\
      \            self.message_port_pub(pmt.intern('chosen pattern'), whee)\n   \
      \     \n        output_items[0][:] = 1\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    filename: '''noise1kcos.txt'''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Call MATLAB executive(filename)', 'blk', [('filename', "'noise1kcos.txt'")],
      [('0', 'complex', 1)], [('0', 'complex', 1), ('chosen pattern', 'message', 1)],
      "Runs matlab executive function every time it registers that [filename] has
      been modified and spits its output out as a message\nOne caveat is that [filename]
      needs to already exist in the present directory, otherwise there'll be an error
      thrown saying that the file doesn't exist.", ['filename'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [80, 1144.0]
    rotation: 0
    state: enabled
- name: epy_block_1_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport time\nimport subprocess\n\nclass blk(gr.sync_block):\
      \  # other base classes are basic_block, decim_block, interp_block\n    \"\"\
      \"Block to loop [script_name (the spectrum sampling block)] every [delay (5)]\
      \ seconds and passing in [script_args]\"\"\"\n\n    def __init__(self, script_name='sandbox.py',\
      \ delay = 5, script_args = '--filename ./noise1kcos.txt'):  # only default arguments\
      \ here\n        \"\"\"arguments to this function show up as parameters in GRC\"\
      \"\"\n        gr.sync_block.__init__(\n            self,\n            name='Loop\
      \ Script',   # will show up in GRC\n            in_sig=[np.complex64],\n   \
      \         out_sig=[np.complex64]\n        )\n        # if an attribute with\
      \ the same name as a parameter is found,\n        # a callback is registered\
      \ (properties work, too).\n        self.script_name = './' + script_name\n \
      \       self.delay = delay\n        self.args = script_args\n        self.cmdlstr\
      \ = self.script_name + ' ' + self.args\n        self.cmdlist = self.cmdlstr.split()\n\
      \n    def work(self, input_items, output_items):\n        print('running the\
      \ script', self.script_name, 'with args', self.args)\n        subprocess.run(self.cmdlist)\n\
      \        print('finished')\n        time.sleep(self.delay)\n        output_items[0][:]\
      \ = input_items[0]\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    delay: '5'
    maxoutbuf: '0'
    minoutbuf: '0'
    script_args: '''--filename ./noise1kcos.txt'''
    script_name: '''sandbox.py'''
  states:
    _io_cache: ('Loop Script', 'blk', [('script_name', "'sandbox.py'"), ('delay',
      '5'), ('script_args', "'--filename ./noise1kcos.txt'")], [('0', 'complex', 1)],
      [('0', 'complex', 1)], 'Block to loop [script_name (the spectrum sampling block)]
      every [delay (5)] seconds and passing in [script_args]', ['delay', 'script_name'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [128, 924.0]
    rotation: 0
    state: enabled
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fft_len
    forward: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: ()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [968, 652.0]
    rotation: 0
    state: enabled
- name: fft_vxx_1
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fft_len
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: '[]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1264, 1140.0]
    rotation: 0
    state: true
- name: header_bits
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Header Bits
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 336.0]
    rotation: 0
    state: enabled
- name: import_1
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: from gnuradio.digital.utils import tagged_streams
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1840, 176.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [736, 1324.0]
    rotation: 0
    state: true
- name: qtgui_vector_sink_f_0
  id: qtgui_vector_sink_f
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '0.2'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    ref_level: '0'
    showports: 'False'
    update_time: '0.10'
    vlen: fft_len
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    x_axis_label: '"x-Axis"'
    x_start: '-8'
    x_step: '1.0'
    x_units: '""'
    y_axis_label: '"y-Axis"'
    y_units: '""'
    ymax: '2000'
    ymin: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1872, 900.0]
    rotation: 0
    state: true
- name: sonny_ofdma_ofdma_tx_0
  id: sonny_ofdma_ofdma_tx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_len: fft_len
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    output_is_shifted: 'True'
    pilot_carriers: pilot_carriers
    pilot_symbols: pilot_symbols
    sc_tag_key: '"sc_tag_key"'
    sync_words: (sync_word1, sync_word2)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [648, 788.0]
    rotation: 0
    state: true
- name: virtual_sink_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Payload Bits
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1440, 416.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Pre-OFDM
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1400, 504.0]
    rotation: 0
    state: enabled
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Header Bits
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 464.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Payload Bits
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 536.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Pre-OFDM
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 688.0]
    rotation: 0
    state: enabled

connections:
- [blocks_complex_to_mag_squared_0, '0', blocks_moving_average_xx_1, '0']
- [blocks_file_source_0, '0', blocks_stream_to_tagged_stream_0, '0']
- [blocks_moving_average_xx_1, '0', epy_block_0_0, '0']
- [blocks_multiply_const_vxx_0, '0', blocks_stream_to_vector_0, '0']
- [blocks_null_source_0, '0', epy_block_1_0, '0']
- [blocks_null_source_1, '0', epy_block_0_1, '0']
- [blocks_repack_bits_bb_0, '0', virtual_sink_0_0, '0']
- [blocks_stream_to_tagged_stream_0, '0', blocks_repack_bits_bb_0, '0']
- [blocks_stream_to_tagged_stream_0, '0', digital_packet_headergenerator_bb_0, '0']
- [blocks_stream_to_vector_0, '0', fft_vxx_1, '0']
- [blocks_tag_gate_0, '0', blocks_throttle_0, '0']
- [blocks_tagged_stream_mux_0, '0', virtual_sink_0_0_0, '0']
- [blocks_throttle_0, '0', blocks_multiply_const_vxx_0, '0']
- [blocks_throttle_0, '0', qtgui_freq_sink_x_0, '0']
- [digital_chunks_to_symbols_xx_0, '0', blocks_tagged_stream_mux_0, '0']
- [digital_chunks_to_symbols_xx_0_0, '0', blocks_tagged_stream_mux_0, '1']
- [digital_ofdm_carrier_allocator_cvc_0, '0', fft_vxx_0, '0']
- [digital_ofdm_cyclic_prefixer_0, '0', blocks_tag_gate_0, '0']
- [digital_packet_headergenerator_bb_0, '0', header_bits, '0']
- [epy_block_0, '0', sonny_ofdma_ofdma_tx_0, '0']
- [epy_block_0_0, '0', qtgui_vector_sink_f_0, '0']
- [epy_block_0_1, '0', blocks_null_sink_1, '0']
- [epy_block_0_1, chosen pattern, epy_block_0, msgin]
- [epy_block_1_0, '0', blocks_null_sink_0, '0']
- [fft_vxx_0, '0', digital_ofdm_cyclic_prefixer_0, '0']
- [fft_vxx_1, '0', blocks_complex_to_mag_squared_0, '0']
- [sonny_ofdma_ofdma_tx_0, '0', fft_vxx_0, '0']
- [virtual_source_0, '0', digital_chunks_to_symbols_xx_0, '0']
- [virtual_source_0_0, '0', digital_chunks_to_symbols_xx_0_0, '0']
- [virtual_source_0_0_0, '0', digital_ofdm_carrier_allocator_cvc_0, '0']
- [virtual_source_0_0_0, '0', epy_block_0, '0']

metadata:
  file_format: 1
