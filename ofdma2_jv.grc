options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: junk
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: fft_len
  id: variable
  parameters:
    comment: ''
    value: '64'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 160.0]
    rotation: 0
    state: enabled
- name: frame_length_tag_key
  id: variable
  parameters:
    comment: ''
    value: '"frame_len"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1664, 160.0]
    rotation: 0
    state: true
- name: header_equalizer
  id: variable
  parameters:
    comment: ''
    value: digital.ofdm_equalizer_simpledfe(fft_len, header_mod.base(), occupied_carriers,
      pilot_carriers, pilot_symbols)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1640, 240.0]
    rotation: 0
    state: enabled
- name: header_formatter_rx
  id: variable
  parameters:
    comment: ''
    value: digital.packet_header_ofdm(occupied_carriers, n_syms=1, len_tag_key=length_tag_key,
      frame_len_tag_key=frame_length_tag_key, bits_per_header_sym=header_mod.bits_per_symbol(),
      bits_per_payload_sym=payload_mod.bits_per_symbol(), scramble_header=False)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1832, 232.0]
    rotation: 0
    state: enabled
- name: header_mod
  id: variable
  parameters:
    comment: ''
    value: digital.constellation_bpsk()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 160.0]
    rotation: 0
    state: enabled
- name: length_tag_key
  id: variable
  parameters:
    comment: ''
    value: '"packet_len"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 160.0]
    rotation: 0
    state: enabled
- name: occupied_carriers
  id: variable
  parameters:
    comment: ''
    value: (list(range(-26,-21)) + list(range(-20,-9)), list(range(-9,-7)) + list(range(-6,0))
      + list(range(1,7)) + list(range(8,10)), list(range(11,21)) + list(range(22,28)),)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 240.0]
    rotation: 0
    state: enabled
- name: packet_len
  id: variable
  parameters:
    comment: ''
    value: '32'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 160.0]
    rotation: 0
    state: enabled
- name: payload_equalizer
  id: variable
  parameters:
    comment: ''
    value: digital.ofdm_equalizer_simpledfe(fft_len, payload_mod.base(), occupied_carriers,
      pilot_carriers, pilot_symbols, 1)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1464, 160.0]
    rotation: 0
    state: enabled
- name: payload_mod
  id: variable
  parameters:
    comment: ''
    value: digital.constellation_qpsk()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 160.0]
    rotation: 0
    state: enabled
- name: pilot_carriers
  id: variable
  parameters:
    comment: ''
    value: ((-21, -7, 7, 21,),)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072, 240.0]
    rotation: 0
    state: enabled
- name: pilot_symbols
  id: variable
  parameters:
    comment: ''
    value: ((1, 1, 1, -1,),)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1216, 240.0]
    rotation: 0
    state: enabled
- name: rolloff
  id: variable
  parameters:
    comment: ''
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1376, 160.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '1000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 160.0]
    rotation: 0
    state: enabled
- name: sc
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '0'
    step: '1'
    stop: '2'
    value: '0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 164.0]
    rotation: 0
    state: true
- name: sync_word1
  id: variable
  parameters:
    comment: ''
    value: '[0., 0., 0., 0., 0., 0., 0., 1.41421356, 0., -1.41421356, 0., 1.41421356,
      0., -1.41421356, 0., -1.41421356, 0., -1.41421356, 0., 1.41421356, 0., -1.41421356,
      0., 1.41421356, 0., -1.41421356, 0., -1.41421356, 0., -1.41421356, 0., -1.41421356,
      0., 1.41421356, 0., -1.41421356, 0., 1.41421356, 0., 1.41421356, 0., 1.41421356,
      0., -1.41421356, 0., 1.41421356, 0., 1.41421356, 0., 1.41421356, 0., -1.41421356,
      0., 1.41421356, 0., 1.41421356, 0., 1.41421356, 0., 0., 0., 0., 0., 0.]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 240.0]
    rotation: 0
    state: enabled
- name: sync_word2
  id: variable
  parameters:
    comment: ''
    value: '[0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, 1, 1,
      1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 0, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1,
      1, 1, 1, 1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 0, 0, 0, 0, 0] '
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 240.0]
    rotation: 0
    state: enabled
- name: analog_frequency_modulator_fc_0
  id: analog_frequency_modulator_fc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    sensitivity: -2.0/fft_len
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1552, 1336.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: fft_len+fft_len//4
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072, 1440.0]
    rotation: 0
    state: enabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: junk.txt
    type: byte
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 420.0]
    rotation: 0
    state: true
- name: blocks_file_sink_0_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: /nfs/users/j149q328/Documents/ass.txt
    type: byte
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1544, 2140.0]
    rotation: 0
    state: true
- name: blocks_file_sink_1
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: /nfs/users/j149q328/Documents/junk.txt
    type: complex
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 908.0]
    rotation: 0
    state: true
- name: blocks_file_source_0
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: ''
    file: /nfs/users/j149q328/Documents/e.bin
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'False'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 304.0]
    rotation: 0
    state: true
- name: blocks_file_source_1
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: ''
    file: /nfs/users/j149q328/Documents/e.bin
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 788.0]
    rotation: 0
    state: true
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1640, 2264.0]
    rotation: 0
    state: disabled
- name: blocks_message_debug_1
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 976.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '0.05'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 964.0]
    rotation: 180
    state: enabled
- name: blocks_multiply_xx_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1848, 1320.0]
    rotation: 0
    state: enabled
- name: blocks_repack_bits_bb_0
  id: blocks_repack_bits_bb
  parameters:
    affinity: ''
    alias: ''
    align_output: 'False'
    comment: ''
    endianness: gr.GR_LSB_FIRST
    k: '8'
    l: payload_mod.bits_per_symbol()
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1152, 408.0]
    rotation: 0
    state: enabled
- name: blocks_repack_bits_bb_0_0
  id: blocks_repack_bits_bb
  parameters:
    affinity: ''
    alias: ''
    align_output: 'True'
    comment: ''
    endianness: gr.GR_LSB_FIRST
    k: payload_mod.bits_per_symbol()
    l: '8'
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1168, 2148.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_tagged_stream_0
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: packet_len
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 348.0]
    rotation: 0
    state: enabled
- name: blocks_tag_gate_0
  id: blocks_tag_gate
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_tags: 'False'
    single_key: '""'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [528, 1188.0]
    rotation: 0
    state: enabled
- name: blocks_tagged_stream_mux_0
  id: blocks_tagged_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengthtagname: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    ninputs: '2'
    tag_preserve_head_pos: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1048, 504.0]
    rotation: 0
    state: enabled
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [824, 1348.0]
    rotation: 0
    state: true
- name: digital_chunks_to_symbols_xx_0
  id: digital_chunks_to_symbols_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    dimension: '1'
    in_type: byte
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    out_type: complex
    symbol_table: header_mod.points()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 440.0]
    rotation: 0
    state: enabled
- name: digital_chunks_to_symbols_xx_0_0
  id: digital_chunks_to_symbols_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    dimension: '1'
    in_type: byte
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    out_type: complex
    symbol_table: payload_mod.points()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [608, 544.0]
    rotation: 0
    state: enabled
- name: digital_constellation_decoder_cb_0
  id: digital_constellation_decoder_cb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: header_mod.base()
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1896, 1544.0]
    rotation: 180
    state: enabled
- name: digital_constellation_decoder_cb_1
  id: digital_constellation_decoder_cb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: payload_mod.base()
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 2164.0]
    rotation: 0
    state: enabled
- name: digital_header_payload_demux_0
  id: digital_header_payload_demux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    guard_interval: fft_len//4
    header_len: '3'
    header_padding: '0'
    items_per_symbol: fft_len
    length_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    output_symbols: 'True'
    samp_rate: samp_rate
    special_tags: ()
    timing_tag_key: '"rx_time"'
    trigger_tag_key: '""'
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2088, 1328.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_carrier_allocator_cvc_0
  id: digital_ofdm_carrier_allocator_cvc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_len: fft_len
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    output_is_shifted: 'True'
    pilot_carriers: pilot_carriers
    pilot_symbols: pilot_symbols
    sync_words: (sync_word1, sync_word2)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 624.0]
    rotation: 0
    state: disabled
- name: digital_ofdm_chanest_vcvc_0
  id: digital_ofdm_chanest_vcvc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    eq_noise_red_len: '0'
    force_one_symbol: 'False'
    max_carr_offset: '3'
    maxoutbuf: '0'
    minoutbuf: '0'
    n_data_symbols: '1'
    sync_symbol1: sync_word1
    sync_symbol2: sync_word2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [872, 1600.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_cyclic_prefixer_0
  id: digital_ofdm_cyclic_prefixer
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    cp_len: fft_len//4
    input_size: fft_len
    maxoutbuf: '0'
    minoutbuf: '0'
    rolloff: rolloff
    tagname: length_tag_key
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [992, 932.0]
    rotation: 180
    state: enabled
- name: digital_ofdm_frame_equalizer_vcvc_0
  id: digital_ofdm_frame_equalizer_vcvc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    cp_len: fft_len//4
    equalizer: header_equalizer.base()
    fft_len: fft_len
    fixed_frame_len: '1'
    len_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_channel_state: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1288, 1584.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_frame_equalizer_vcvc_1
  id: digital_ofdm_frame_equalizer_vcvc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    cp_len: fft_len//4
    equalizer: payload_equalizer.base()
    fft_len: fft_len
    fixed_frame_len: '0'
    len_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_channel_state: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 1768.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_serializer_vcc_header
  id: digital_ofdm_serializer_vcc
  parameters:
    affinity: ''
    alias: ''
    carr_offset_key: ''
    comment: ''
    fft_len: fft_len
    input_is_shifted: 'True'
    len_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    packet_len_tag_key: ''
    symbols_skipped: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1904, 1616.0]
    rotation: 0
    state: disabled
- name: digital_ofdm_serializer_vcc_payload
  id: digital_ofdm_serializer_vcc
  parameters:
    affinity: ''
    alias: ''
    carr_offset_key: ''
    comment: ''
    fft_len: fft_len
    input_is_shifted: 'True'
    len_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    packet_len_tag_key: length_tag_key
    symbols_skipped: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 1892.0]
    rotation: 180
    state: disabled
- name: digital_ofdm_sync_sc_cfb_0
  id: digital_ofdm_sync_sc_cfb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    cp_len: fft_len//4
    fft_len: fft_len
    maxoutbuf: '0'
    minoutbuf: '0'
    threshold: '0.9'
    use_even_carriers: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1136, 1328.0]
    rotation: 0
    state: enabled
- name: digital_packet_headergenerator_bb_0
  id: digital_packet_headergenerator_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    header_formatter: header_formatter_rx.base()
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1152, 328.0]
    rotation: 0
    state: enabled
- name: digital_packet_headerparser_b_0
  id: digital_packet_headerparser_b
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    header_formatter: header_formatter_rx
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1624, 1544.0]
    rotation: 180
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nclass\
      \ blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block\n\
      \n    def __init__(self, key = \"sc_tag_key\", packet_key = \"packet_len\"):\
      \  # only default arguments here\n        gr.sync_block.__init__(\n        \
      \    self,\n            name='OFDMA Controller Block',   # will show up in GRC\n\
      \            in_sig=[np.complex64],\n            out_sig=[np.complex64]\n  \
      \      )\n\n        self.key = key;\n        #self.pattern = pattern;\n    \
      \    self.packet_key = packet_key;\n        \n        self.selectPortName =\
      \ 'msg_in'\n        self.message_port_register_in(pmt.intern(self.selectPortName))\n\
      \        self.set_msg_handler(pmt.intern(self.selectPortName), self.handle_msg)\n\
      \        self.pattern = 1\n        \n    def handle_msg(self, msg):\n    \t\
      self.pattern = pmt.to_python(msg)\n    \t\n    def work(self, input_items, output_items):\n\
      \        pkey = pmt.intern(self.key)\n        ppattern = pmt.to_pmt(self.pattern)\n\
      \        ppacket = pmt.to_pmt(self.packet_key)\n        for i, sample in enumerate(input_items[0]):\n\
      \            t = self.nitems_written(0) + i\n            #this seems like a\
      \ \"hacky\" way of doing this, but it works and I can't find any other way\n\
      \            tags = self.get_tags_in_range(0, t, t+1,ppacket)\n            if\
      \ (len(tags) != 0):\n                self.add_item_tag(0, self.nitems_written(0)+i,\
      \ pkey, ppattern)\n        output_items[0][:] = input_items[0]\n        return\
      \ len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    key: '''sc_tag_key'''
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_key: '''packet_len'''
  states:
    _io_cache: ('OFDMA Controller Block', 'blk', [('key', "'sc_tag_key'"), ('packet_key',
      "'packet_len'")], [('0', 'complex', 1), ('msg_in', 'message', 1)], [('0', 'complex',
      1)], '', ['key', 'packet_key'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 828.0]
    rotation: 0
    state: enabled
- name: epy_block_0_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nclass\
      \ blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block\n\
      \n    def __init__(self, key = \"sc_tag_key\", packet_key = \"packet_len\",\
      \ vlen = 64):  # only default arguments here\n        gr.sync_block.__init__(\n\
      \            self,\n            name='OFDMA Controller: vector',   # will show\
      \ up in GRC\n            in_sig=[(np.complex64,vlen)],\n            out_sig=[(np.complex64,vlen)]\n\
      \        )\n\n        self.key = key;\n        #self.pattern = pattern;\n  \
      \      self.packet_key = packet_key;\n        \n        self.selectPortName\
      \ = 'msg2'\n        self.message_port_register_in(pmt.intern(self.selectPortName))\n\
      \        self.set_msg_handler(pmt.intern(self.selectPortName), self.handle_msg)\n\
      \        self.pattern = 1\n        \n    def handle_msg(self, msg):\n    \t\
      self.pattern = pmt.to_python(msg)\n    \t\n    def work(self, input_items, output_items):\n\
      \        pkey = pmt.intern(self.key)\n        ppattern = pmt.to_pmt(self.pattern)\n\
      \        ppacket = pmt.to_pmt(self.packet_key)\n        for i, sample in enumerate(input_items[0]):\n\
      \            t = self.nitems_written(0) + i\n            #this seems like a\
      \ \"hacky\" way of doing this, but it works and I can't find any other way\n\
      \            tags = self.get_tags_in_range(0, t, t+1,ppacket)\n            if\
      \ (len(tags) != 0):\n                self.add_item_tag(0, self.nitems_written(0)+i,\
      \ pkey, ppattern)\n        output_items[0][:] = input_items[0]\n        return\
      \ len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    key: '''sc_tag_key'''
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_key: length_tag_key
    vlen: fft_len
  states:
    _io_cache: '(''OFDMA Controller: vector'', ''blk'', [(''key'', "''sc_tag_key''"),
      (''packet_key'', "''packet_len''"), (''vlen'', ''64'')], [(''0'', ''complex'',
      64), (''msg2'', ''message'', 1)], [(''0'', ''complex'', 64)], '''', [''key'',
      ''packet_key''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 2028.0]
    rotation: 180
    state: enabled
- name: epy_block_0_0_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nclass\
      \ blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block\n\
      \n    def __init__(self, key = \"sc_tag_key\", packet_key = \"packet_len\",\
      \ vlen = 64):  # only default arguments here\n        gr.sync_block.__init__(\n\
      \            self,\n            name='OFDMA Controller: vector',   # will show\
      \ up in GRC\n            in_sig=[(np.complex64,vlen)],\n            out_sig=[(np.complex64,vlen)]\n\
      \        )\n\n        self.key = key;\n        #self.pattern = pattern;\n  \
      \      self.packet_key = packet_key;\n        \n        self.selectPortName\
      \ = 'msg2'\n        self.message_port_register_in(pmt.intern(self.selectPortName))\n\
      \        self.set_msg_handler(pmt.intern(self.selectPortName), self.handle_msg)\n\
      \        self.pattern = 1\n        \n    def handle_msg(self, msg):\n    \t\
      self.pattern = pmt.to_python(msg)\n    \t\n    def work(self, input_items, output_items):\n\
      \        pkey = pmt.intern(self.key)\n        ppattern = pmt.to_pmt(self.pattern)\n\
      \        ppacket = pmt.to_pmt(self.packet_key)\n        for i, sample in enumerate(input_items[0]):\n\
      \            t = self.nitems_written(0) + i\n            #this seems like a\
      \ \"hacky\" way of doing this, but it works and I can't find any other way\n\
      \            tags = self.get_tags_in_range(0, t, t+1,ppacket)\n            if\
      \ (len(tags) != 0):\n                self.add_item_tag(0, self.nitems_written(0)+i,\
      \ pkey, ppattern)\n        output_items[0][:] = input_items[0]\n        return\
      \ len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    key: '''sc_tag_key'''
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_key: length_tag_key
    vlen: fft_len
  states:
    _io_cache: '(''OFDMA Controller: vector'', ''blk'', [(''key'', "''sc_tag_key''"),
      (''packet_key'', "''packet_len''"), (''vlen'', ''64'')], [(''0'', ''complex'',
      64), (''msg2'', ''message'', 1)], [(''0'', ''complex'', 64)], '''', [''key'',
      ''packet_key''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1560, 1780.0]
    rotation: 0
    state: enabled
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nclass\
      \ blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block\n\
      \n    def __init__(self, packet_key = \"packet_len\"):  # only default arguments\
      \ here\n        gr.sync_block.__init__(\n            self,\n            name='Pattern\
      \ Retriever',   # will show up in GRC\n            in_sig=[np.int8],\n     \
      \       out_sig=[np.int8]\n        )\n        self.message_port_register_out(pmt.intern('msg_out'))\n\
      \        self.packet_key = packet_key;\n\n    def work(self, input_items, output_items):\n\
      \    \tcounter = 0\n    \tppacket = pmt.to_pmt(self.packet_key)\n    \tfor i,\
      \ sample in enumerate(input_items[0]):\n    \t\tt = self.nitems_written(0) +\
      \ i\n    \t\ttags = self.get_tags_in_range(0,t,t+1,ppacket)\n    \t\t#output_items[0][i]\
      \ = input_items[0][i]\n    \t\t#if (len(tags) != 0): # if there is a packet\
      \ length tag\n    \t\tif i % 31 == 0:\n    \t\t\toutput_items[0][i] = input_items[0][i]\n\
      \    \t\t\tself.message_port_pub(pmt.intern('msg_out'), pmt.intern(str(input_items[0][i])))\n\
      \    \t\telse:\n    \t\t\toutput_items[0][i] = input_items[0][i]\n    \treturn\
      \ len(output_items[0])\n\n\t\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_key: '''packet_len'''
  states:
    _io_cache: ('Pattern Retriever', 'blk', [('packet_key', "'packet_len'")], [('0',
      'byte', 1)], [('0', 'byte', 1), ('msg_out', 'message', 1)], '', ['packet_key'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1376, 2228.0]
    rotation: 0
    state: disabled
- name: epy_block_2
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.basic_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self, sc_num=0):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Add SC Number to File Source',   # will show up\
      \ in GRC\n            in_sig=[np.int8],\n            out_sig=[np.int8]\n   \
      \     )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.sc_num\
      \ = sc_num\n\n    def work(self, input_items, output_items):\n        counter\
      \ = 0\n        for indx, sample in enumerate(input_items[0]):\n        \tif\
      \ indx % 31 == 0:\n        \t\toutput_items[0][indx] = self.sc_num\n       \
      \ \t\tcounter = counter+1\n        \telse:\n        \t\toutput_items[0][indx]\
      \ = input_items[0][indx-counter]\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    sc_num: '0'
  states:
    _io_cache: ('Add SC Number to File Source', 'blk', [('sc_num', '0')], [('0', 'byte',
      1)], [('0', 'byte', 1)], 'Embedded Python Block example - a simple multiply
      const', ['sc_num'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [496, 356.0]
    rotation: 0
    state: true
- name: epy_block_3
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport pmt\n\n\nclass blk(gr.sync_block):  # other\
      \ base classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded\
      \ Python Block example - a simple multiply const\"\"\"\n\n    def __init__(self):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='ass',   # will show up in GRC\n            in_sig=[np.complex64],\n\
      \            out_sig=[np.complex64]\n        )\n        # if an attribute with\
      \ the same name as a parameter is found,\n        # a callback is registered\
      \ (properties work, too).\n        self.PortName = 'msg_out'\n        self.message_port_register_out(pmt.intern(self.PortName))\n\
      \        self.pattern = 1\n        \n\n    def work(self, input_items, output_items):\n\
      \        \"\"\"example: multiply with constant\"\"\"\n        if len(output_items[0])>0:\n\
      \        \toutput_items[0][:] = input_items[0]\n        \tmsg = pmt.to_pmt(self.pattern)\n\
      \        \tself.message_port_pub(pmt.intern(self.PortName), msg)\n        return\
      \ len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('ass', 'blk', [], [('0', 'complex', 1)], [('0', 'complex', 1), ('msg_out',
      'message', 1)], 'Embedded Python Block example - a simple multiply const', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224, 848.0]
    rotation: 0
    state: true
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fft_len
    forward: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: ()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [968, 652.0]
    rotation: 0
    state: enabled
- name: fft_vxx_0_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fft_len
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: ()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 1600.0]
    rotation: 0
    state: enabled
- name: fft_vxx_1
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fft_len
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: ()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 1768.0]
    rotation: 0
    state: enabled
- name: header_bits
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Header Bits
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1432, 260.0]
    rotation: 0
    state: enabled
- name: import_1
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: from gnuradio.digital.utils import tagged_streams
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1840, 176.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Scope Plot
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: Scope Plot
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 1056.0]
    rotation: 0
    state: enabled
- name: sonny_ofdma_ofdma_rx_0
  id: sonny_ofdma_ofdma_rx
  parameters:
    affinity: ''
    alias: ''
    carr_offset_key: '""'
    comment: ''
    fft_len: fft_len
    input_is_shifted: 'True'
    len_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    packet_len_tag_key: length_tag_key
    sc_tag_key: '"sc_tag_key"'
    symbols_skipped: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 2028.0]
    rotation: 180
    state: true
- name: sonny_ofdma_ofdma_rx_0_0
  id: sonny_ofdma_ofdma_rx
  parameters:
    affinity: ''
    alias: ''
    carr_offset_key: '""'
    comment: ''
    fft_len: fft_len
    input_is_shifted: 'True'
    len_tag_key: frame_length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    packet_len_tag_key: '""'
    sc_tag_key: '"sc_tag_key"'
    symbols_skipped: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1856, 1764.0]
    rotation: 0
    state: true
- name: sonny_ofdma_ofdma_tx_0
  id: sonny_ofdma_ofdma_tx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_len: fft_len
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    output_is_shifted: 'True'
    pilot_carriers: pilot_carriers
    pilot_symbols: pilot_symbols
    sc_tag_key: '"sc_tag_key"'
    sync_words: (sync_word1, sync_word2)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [648, 788.0]
    rotation: 0
    state: true
- name: virtual_sink_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Payload Bits
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1440, 416.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Pre-OFDM
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1400, 504.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Header Stream
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2600, 1384.0]
    rotation: 0
    state: enabled
- name: virtual_sink_1_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Payload Stream
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2592, 1464.0]
    rotation: 0
    state: enabled
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Header Bits
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 464.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Payload Bits
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 536.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Pre-OFDM
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 688.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Header Stream
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 1632.0]
    rotation: 0
    state: enabled
- name: virtual_source_1_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Payload Stream
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 1808.0]
    rotation: 0
    state: enabled

connections:
- [analog_frequency_modulator_fc_0, '0', blocks_multiply_xx_0, '0']
- [blocks_delay_0, '0', blocks_multiply_xx_0, '1']
- [blocks_file_source_0, '0', epy_block_2, '0']
- [blocks_file_source_1, '0', epy_block_3, '0']
- [blocks_multiply_const_vxx_0, '0', blocks_tag_gate_0, '0']
- [blocks_multiply_xx_0, '0', digital_header_payload_demux_0, '0']
- [blocks_repack_bits_bb_0, '0', virtual_sink_0_0, '0']
- [blocks_repack_bits_bb_0_0, '0', blocks_file_sink_0_0, '0']
- [blocks_repack_bits_bb_0_0, '0', epy_block_1, '0']
- [blocks_stream_to_tagged_stream_0, '0', blocks_repack_bits_bb_0, '0']
- [blocks_stream_to_tagged_stream_0, '0', digital_packet_headergenerator_bb_0, '0']
- [blocks_tag_gate_0, '0', blocks_throttle_0, '0']
- [blocks_tag_gate_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_tagged_stream_mux_0, '0', virtual_sink_0_0_0, '0']
- [blocks_throttle_0, '0', blocks_delay_0, '0']
- [blocks_throttle_0, '0', digital_ofdm_sync_sc_cfb_0, '0']
- [digital_chunks_to_symbols_xx_0, '0', blocks_tagged_stream_mux_0, '0']
- [digital_chunks_to_symbols_xx_0_0, '0', blocks_tagged_stream_mux_0, '1']
- [digital_constellation_decoder_cb_0, '0', digital_packet_headerparser_b_0, '0']
- [digital_constellation_decoder_cb_1, '0', blocks_repack_bits_bb_0_0, '0']
- [digital_header_payload_demux_0, '0', virtual_sink_0_1, '0']
- [digital_header_payload_demux_0, '1', virtual_sink_1_0, '0']
- [digital_ofdm_carrier_allocator_cvc_0, '0', fft_vxx_0, '0']
- [digital_ofdm_chanest_vcvc_0, '0', digital_ofdm_frame_equalizer_vcvc_0, '0']
- [digital_ofdm_cyclic_prefixer_0, '0', blocks_multiply_const_vxx_0, '0']
- [digital_ofdm_frame_equalizer_vcvc_0, '0', digital_ofdm_serializer_vcc_header, '0']
- [digital_ofdm_frame_equalizer_vcvc_0, '0', epy_block_0_0_0, '0']
- [digital_ofdm_frame_equalizer_vcvc_1, '0', digital_ofdm_serializer_vcc_payload,
  '0']
- [digital_ofdm_frame_equalizer_vcvc_1, '0', epy_block_0_0, '0']
- [digital_ofdm_serializer_vcc_header, '0', digital_constellation_decoder_cb_0, '0']
- [digital_ofdm_serializer_vcc_payload, '0', digital_constellation_decoder_cb_1, '0']
- [digital_ofdm_sync_sc_cfb_0, '0', analog_frequency_modulator_fc_0, '0']
- [digital_ofdm_sync_sc_cfb_0, '1', digital_header_payload_demux_0, '1']
- [digital_packet_headergenerator_bb_0, '0', header_bits, '0']
- [digital_packet_headerparser_b_0, header_data, digital_header_payload_demux_0, header_data]
- [epy_block_0, '0', sonny_ofdma_ofdma_tx_0, '0']
- [epy_block_0_0, '0', sonny_ofdma_ofdma_rx_0, '0']
- [epy_block_0_0_0, '0', sonny_ofdma_ofdma_rx_0_0, '0']
- [epy_block_1, '0', blocks_file_sink_0_0, '0']
- [epy_block_1, msg_out, blocks_message_debug_0, print]
- [epy_block_2, '0', blocks_file_sink_0, '0']
- [epy_block_2, '0', blocks_stream_to_tagged_stream_0, '0']
- [epy_block_3, '0', blocks_file_sink_1, '0']
- [epy_block_3, msg_out, blocks_message_debug_1, print]
- [epy_block_3, msg_out, epy_block_0, msg_in]
- [epy_block_3, msg_out, epy_block_0_0, msg2]
- [epy_block_3, msg_out, epy_block_0_0_0, msg2]
- [fft_vxx_0, '0', digital_ofdm_cyclic_prefixer_0, '0']
- [fft_vxx_0_0, '0', digital_ofdm_chanest_vcvc_0, '0']
- [fft_vxx_1, '0', digital_ofdm_frame_equalizer_vcvc_1, '0']
- [sonny_ofdma_ofdma_rx_0, '0', digital_constellation_decoder_cb_1, '0']
- [sonny_ofdma_ofdma_rx_0_0, '0', digital_constellation_decoder_cb_0, '0']
- [sonny_ofdma_ofdma_tx_0, '0', fft_vxx_0, '0']
- [virtual_source_0, '0', digital_chunks_to_symbols_xx_0, '0']
- [virtual_source_0_0, '0', digital_chunks_to_symbols_xx_0_0, '0']
- [virtual_source_0_0_0, '0', digital_ofdm_carrier_allocator_cvc_0, '0']
- [virtual_source_0_0_0, '0', epy_block_0, '0']
- [virtual_source_0_1, '0', fft_vxx_0_0, '0']
- [virtual_source_1_0, '0', fft_vxx_1, '0']

metadata:
  file_format: 1
